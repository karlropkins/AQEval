#break-segments
quantBreakSegments(temp, "no2", h=0.3)
edit(segmented::segmented.lm)
devtools::unload()
devtools::load_all()
edit(segmented::segmented.lm)
#using openair timeAverage to covert 1-hour data to 1-day averages
temp <- openair::timeAverage(aq.data, "1 day")
#break-points
quantBreakPoints(temp, "no2", h=0.3)
#break-segments
quantBreakSegments(temp, "no2", h=0.3)
devtools::unload()
require(remotes)
install_version("segmented", version = "1.3-4", repos = "http://cran.us.r-project.org")
edit(segmented::segmented.lm)
devtools::load_all()
#using openair timeAverage to covert 1-hour data to 1-day averages
temp <- openair::timeAverage(aq.data, "1 day")
#break-points
quantBreakPoints(temp, "no2", h=0.3)
#break-segments
quantBreakSegments(temp, "no2", h=0.3)
devtools::unload()
devtools::load_all()
devtools::load_all()
example(AQEval)
example(quantBreakPoints)
example("quantBreakPoints")
?quantBreakPoints
devtools::document()
example("quantBreakPoints")
?quantBreakPoints
#using openair timeAverage to covert 1-hour data to 1-day averages
temp <- openair::timeAverage(aq.data, "1 day")
#break-points
quantBreakPoints(temp, "no2", h=0.3)
#break-segments
quantBreakSegments(temp, "no2", h=0.3)
[Package
segmented::segmented
segmented::segmented.lm
devtools::load_all()
example(quantBreakSegments)
example("quantBreakSegments")
example("quantBreakSegments")
?quantBreakSegments
example("quantBreakSegments")
example("quantBreakPoints")
devtools::document()
example("quantBreakPoints")
devtools::unload()
devtools::load_all()
example("quantBreakPoints")
example("AQEval::quantBreakPoints")
example("quantBreakPoints")
devtools::unload()
devtools::document()
devtools::build()
install.packages("~/pkg/AQEval/AQEval_0.2.11.tar.gz", repos = NULL, type = "source")
require(AQEval)
example("quantBreakPoints")
packageVersion("segmented")
source("~/pkg/AQEval/AQEval/R/aqe.misc.R", echo=TRUE)
source("~/pkg/AQEval/AQEval/R/aqe.misc.R", echo=TRUE)
source("~/pkg/AQEval/AQEval/R/aqe.misc.R", echo=TRUE)
source("~/pkg/AQEval/AQEval/R/aqe.misc.R", echo=TRUE)
devtools::document()
devtools::document()
rm(list = c("aqe_buildBreaks", "aqe_fitBreakPointsModel", "aqe_fitBreakSegmentsModel01", "aqe_fitBreakSegmentsModel02", "aqe_makeBreakPointsReport", "aqe_makeBreakSegmentsReport", "aqe_makeSegmentsFromBreaks01", "aqe_plotQuantBreakPoints", "aqe_plotQuantBreakSegments01", "aqe_plotQuantBreakSegments02", "aqe_quickText", "aqe_summariseBreakPointsReport", "aqe_summariseBreakPointsReport.old", "aqe_summariseBreakSegmentsReport", "local_seg.lm.fit", "local_seg.lm.fit.boot", "local_segmented"))#
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
example("quantBreakSegmented")
devtools::unload()
devtools::load_all()
example("quantBreakSegmented")
devtools::unload()
install.packages("~/pkg/AQEval/AQEval_0.2.11.tar.gz", repos = NULL, type = "source")
require(segmented)
require(AQEval)
example("quantBreakSegmented")
example("quantBreakSegments")
install.packages("AQEval")
install.packages("AQEval")
install.packages("AQEval")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
install.packages("segmented")
require(AQEval)
packageVersion("segmented")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
require(remotes)
install_version("segmented", version = "1.3-4", repos = "http://cran.us.r-project.org")
require(AQEval)
example("quantBreakPoints")
packageVersion(segmented)
packageVersion("segmented")
edit(segmented::summary.segmented)
devtools::build()
devtools::document()
devtools::build()
install.packages("~/pkg/AQEval/AQEval_0.2.11.tar.gz", repos = NULL, type = "source")
install.packages("~/pkg/AQEval/AQEval_0.2.11.tar.gz", repos = NULL, type = "source")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
devtools::document()
devtools::build()
devtools::load_all()
example("quantBreakPoints")
install.packages("~/pkg/AQEval/AQEval_0.2.11.tar.gz", repos = NULL, type = "source")
require(AQEval)
packageVersion(segmented)
packageVersion("segmented")
example("quantBreakPoints")
edit(segmented::confint.segmented)
devtools::document()
devtools::build()
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
devtools::document()
devtools::build()
require(remotes)
install_version("segmented", version = "1.3-4", repos = "http://cran.us.r-project.org")
edit(segmented::confint.segmented)
devtools::document()
devtools::build()
install.packages("~/pkg/AQEval/AQEval_0.2.11.tar.gz", repos = NULL, type = "source")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
packageVersion("segmented")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
packageVersion("segmented")
source("~/pkg/AQEval/AQEval/R/quantify.breaks.R")
source("~/pkg/AQEval/AQEval/R/quantify.breaks.R")
source("~/pkg/AQEval/AQEval/R/quantify.breaks.R")
grey.area::splate_date()
grey.area::splat_date()
grey.area::splat_version(increase = "0.0.1")
devtools::document()
rm(list = c("quantBreakPoints", "quantBreakSegments"))
devtools::document()
devtools::build()
install.packages("~/pkg/AQEval/AQEval_0.2.12.tar.gz", repos = NULL, type = "source")
install.packages("segmented")
require(AQEval)
example("quantBreakPoints")
?quantBreakPoints
devtools::document()
devtools::build()
devtools::check()
devtools::document()
importFrom
devtools::document()
source("~/pkg/AQEval/AQEval/R/aqe.misc.R", echo=TRUE)
devtools::document()
importFrom
?importFrom
??importFrom
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build()
devtools::check()
devtools::doc()
devtools::document()
devtools::build()
devtools::check()
grey.area::splat_date()
grey.area::splat_version(version = "0.3.0")
usethis::use_gpl3_license()
usethis::use_pkgdown()
pkgdown::build_home_index
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
devtools::document()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_reference()
pkgdown::init_site()
pkgdown::build_reference()
3/13
5/12ooo
5/12000
4\
4/12
3/13
devtools::document()
pkgdown::build_references()
pkgdown::build_reference()
pkgdown::build_news()
pkgdown::build_news()
devtools::build_readme()
pkgdown::build_news()
?pkgdown::build_news()
devtools::build()
install.packages("~/pkg/AQEval/AQEval_0.3.0.tar.gz", repos = NULL, type = "source")
devtools::build()
pkgdown::init_site()
pkgdown::build_site()
?pkgdown::build_news()
pkgdown::build_news()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
utils::news()
pkgdown::init_site()
pkgdown::build_news()
usethis::use_news_md()
pkgdown::init_site()
pkgdown::build_news
pkgdown::build_news()
pkgdown::init_site()
pkgdown::build_site()
devtools::document()
devtools::build()
install.packages("~/pkg/AQEval/AQEval_0.3.0.tar.gz", repos = NULL, type = "source")
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::build_news()
pkgdown::init_site()
pkgdown::build_news()
pkgdown::build_news()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
devtools::use_readme_rmd()
devtools::use_readme_rmd()
require(devtools)
use_readme_rmd()
use_news_md()
require(pkgdown)
build_site()
init_site()
build_site()
usethis::use_github_actions_badge()
init_site()
init_home()
build_home()
init_site()
remotess::install_github("karlropkins/AQEval")
remotes::install_github("karlropkins/AQEval")
require(AQEval)
packageVersion()
packageVersion("AQEval")
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_home()
pkgdown::build_home()#
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_home_index()
pkgdwon::init_website
pkgdown::init_website
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
usethis::use_gpl3_license()
pkgdown::init_site()
pkgdown::build_home()
usethis::use_pkgdown()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home()
wdir()
getwd()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::init_home()
pkgdown::build_home()
usethis::use_pkgdown_github_pages()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site_github_pages()
usethis::use_github_links()
usethis::use_github_links()
usethis::use_github_links(overwrite=TRUE)
usethis::use_github_links()
pkgdown::build_site_github_pages()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site_github_pages()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::init_home()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_site()
pkgdown::build_articles()
pkgdown::build_articles_index()
pkgdown::build_articles_index()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home_index()
pkgdown::init_site()
pkgdown::build_site_github_pages()
pkgdown::init_site()
pkgdown::build_site_github_pages()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_home()
usethis::use_pkgdown_github_pages()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_home()
usethis::use_github_pages()
usethis::use_github_links()
usethis::use_github_links(overwrite+T)
usethis::use_github_links(overwrite=T)
pkgdown::init_site()
pkgdown::build_articles()
pkgdown::build_home()
pkgdown::build_site_github_pages()
usethis::use_pkgdown_github_pages()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::init_site()
usethis::use_pkgdown_github_pages()
pkgdown::init_site()
pkgdown::init_site()
usethis::use_pkgdown_github_pages()
pkgdown::init_site()
pkgdown::build_site_github_pages()
pkgdown::build_articles()
pkgdown::build_articles_index()
pkgdown::build_articles_index()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_site_github_pages()
pkgdown::init_site()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::init_site()
usethis::use_pkgdown_github_pages()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::build_articles_index()
pkgdown::init_site()
pkgdown::build_home()
usethis::use_pkgdown_github_pages()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::init_site()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_articles_index()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::build_articles_index()
pkgdown::build_articles()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_articles()
pkgdown::init_site()
pkgdown::build_home()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_site()
pkgdown::init_site()
pkgdown::build_home()
devtools::check()
